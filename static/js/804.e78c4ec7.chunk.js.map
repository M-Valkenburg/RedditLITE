{"version":3,"file":"static/js/804.e78c4ec7.chunk.js","mappings":"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","sources":["components/Card/ContentLoader.js","components/Card/Comment.js","components/Loader/LoaderSmall.js","components/Card/Card.js"],"sourcesContent":["import React from 'react';\r\nimport './ContentLoader.css';\r\nimport { FiExternalLink } from 'react-icons/fi'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport remarkGfm from 'remark-gfm'\r\n\r\nexport default function ContentLoader({ post }) {\r\n    const toggleOverlay = () => {\r\n        const div = document.getElementById(post.id);\r\n        div.style.display = \"none\";\r\n    }\r\n\r\n    const expandText = () => {\r\n        const div = document.getElementById(post.id + 'text');\r\n        div.style.overflow = \"none\";\r\n        div.style.maxHeight = '100%';\r\n    }\r\n\r\n    if (!post.hint && post.url.includes('www.reddit.com')) {\r\n        return (\r\n            <div className=\"text-container\" id={post.id + 'text'} onClick={expandText}>\r\n                <div className=\"content-text\"><ReactMarkdown remarkPlugins={[remarkGfm]}>{post.selftext}</ReactMarkdown></div>\r\n                <div className=\"text-overlay\" id={post.id} onClick={toggleOverlay}></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (post.selftext !== \"\") {\r\n        return (\r\n            <div className=\"text-container\" id={post.id + 'text'} onClick={expandText}>\r\n                <div className=\"content-text\"><ReactMarkdown remarkPlugins={[remarkGfm]}>{post.selftext}</ReactMarkdown></div>\r\n                <div className=\"text-overlay\" id={post.id} onClick={toggleOverlay}></div>\r\n            </div>\r\n        )\r\n    }\r\n \r\n    if (post.post_hint === \"image\") {\r\n        return (\r\n            <div className=\"image-container\" onClick={toggleOverlay}>\r\n                <img className=\"content-img\" src={post.url} alt=\"\"/>\r\n                {post.over_18 && <div className=\"nsfw-content\" id={post.id}><span>nsfw<br/>click to view</span></div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (post.post_hint === 'hosted:video') {\r\n        return ( \r\n            <div className=\"video-container\" onClick={toggleOverlay}>\r\n                <video className=\"content-video\" src={post.media.reddit_video.fallback_url} preload=\"metadata\" controls/>\r\n                {post.over_18 && <div className=\"nsfw-content\" id={post.id}><span>nsfw<br/>click to view</span></div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (post.post_hint === \"link\" || post.url.includes('/gallery/') || post.post_hint === \"rich:video\" || !post.hint) {\r\n        const url = post.url;\r\n        let trimmedLink;\r\n    \r\n        if (url.startsWith(\"https://www.\")) {\r\n            trimmedLink = url.replace(\"https://www.\", \"\").substring(0, 20) + \"...\";\r\n        } else if (url.startsWith(\"https://www-\")) {\r\n            trimmedLink = url.replace(\"https://www-\", \"\").substring(0, 20) + \"...\";\r\n        } else if (url.startsWith(\"https://\")) {\r\n            trimmedLink = url.replace(\"https://\", \"\").substring(0, 20) + \"...\";\r\n        }\r\n\r\n\r\n        if (post.thumbnail === \"default\" || post.thumbnail === \"nsfw\" || post.thumbnail === \"\") {\r\n            return (\r\n                <a target=\"_blank\" href={url} alt={post.title} rel=\"noreferrer noopener\">{trimmedLink}&nbsp;<FiExternalLink className=\"link-icon\"/></a>\r\n            )\r\n        } else {\r\n            return (            \r\n                <div className=\"link-container\">\r\n                    <a target=\"_blank\" href={url} alt={post.title} rel=\"noreferrer noopener\">\r\n                        <div className=\"thumbnail-container\">\r\n                            <img className=\"link-image\" src={post.thumbnail} alt=\"\"/>\r\n                            {post.over_18 && <div className=\"nsfw-content\"></div>}\r\n                        </div>\r\n                    </a>\r\n                    <a target=\"_blank\" href={url} alt={post.title} rel=\"noreferrer noopener\">{trimmedLink}&nbsp;<FiExternalLink className=\"link-icon\"/></a>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\nimport './Comment.css'\r\nimport moment from 'moment';\r\nimport ReactMarkdown from 'react-markdown'\r\nimport remarkGfm from 'remark-gfm'\r\n\r\nexport default function Comments({ comment }) {\r\n    return (\r\n        <div className=\"comment\">\r\n            <strong>{comment.author}</strong><span> - {moment.unix(comment.created_utc).fromNow()}</span>\r\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>{comment.body}</ReactMarkdown>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport './LoaderSmall.css';\r\n\r\nexport default function SubredditsLoader() {\r\n    return (\r\n        <div className=\"subreddits-loader\"></div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Card.css';\r\nimport { BsFillPinAngleFill } from 'react-icons/bs';\r\nimport { FaComment } from 'react-icons/fa'\r\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im';\r\nimport moment from 'moment';\r\nimport ContentLoader from './ContentLoader';\r\nimport Comment from './Comment';\r\nimport LoaderSmall from '../Loader/LoaderSmall';\r\nimport { setSearchTerm, selectComments } from '../../features/posts/redditSlice';\r\n\r\nexport default function Card({ post, loadComments }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ vote, setVote ] = useState(0);\r\n    const [ upvote, setUpvote ] = useState(false);\r\n    const [ downvote, setDownvote ] = useState(false);\r\n\r\n    const handleVote = (value) => {\r\n        if (value === 1) {\r\n            setVote(+1);\r\n            setUpvote(true);\r\n            setDownvote(false)        \r\n        } else if (value === -1) {\r\n            setVote(-1);\r\n            setDownvote(true);\r\n            setUpvote(false);\r\n        }\r\n    }\r\n\r\n    const loading = useSelector((state) => state.reddit.commentsLoading);\r\n\r\n    const toggleComments = () => {\r\n        const div = document.getElementById(post.id + 'comments');\r\n        loadComments(post.permalink, post.id);\r\n        div.style.display = \"initial\";\r\n    }\r\n\r\n    const comments = useSelector(selectComments);\r\n    const displayedComments = comments.map(comment => {\r\n        return (\r\n            <Comment\r\n                key={comment.id}\r\n                comment={comment}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            {post.over_18 ? <h2>{post.title} <span className=\"nsfw-tag\">nsfw</span></h2> : <h2>{post.title}</h2>}\r\n            <span className=\"header-info\">\r\n                <strong onClick={() => dispatch(setSearchTerm(post.subreddit))}>{post.subreddit_name_prefixed}</strong> - Posted by {post.author}\r\n                {post.stickied && <BsFillPinAngleFill className=\"pinned\"/>}\r\n            </span>\r\n            <ContentLoader post={post}/>\r\n            <div className=\"post-info\">\r\n                <div className=\"votes\">\r\n                    <span onClick={() => handleVote(1)} className={upvote ? 'upvote-active' : 'upvote'} aria-label=\"upvote post\"><ImArrowUp/></span>\r\n                    <p>&nbsp;{post.ups + vote}&nbsp;</p>\r\n                    <span onClick={() => handleVote(-1)} className={downvote ? 'downvote-active' : 'downvote'} aria-label=\"downvote post\"><ImArrowDown/></span>\r\n                </div>\r\n                <span className=\"time-ago\">{moment.unix(post.created_utc).fromNow()}</span>\r\n                <div className=\"comments\" onClick={toggleComments} aria-label=\"show comments\">\r\n                    <span><FaComment /></span>\r\n                    <p>&nbsp;{post.num_comments}&nbsp;</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"comment-section\" id={post.id + 'comments'}>\r\n                {loading ? <LoaderSmall/> : displayedComments}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n"],"names":["ContentLoader","post","toggleOverlay","document","getElementById","id","style","display","expandText","div","overflow","maxHeight","hint","url","includes","className","onClick","remarkPlugins","remarkGfm","selftext","post_hint","src","alt","over_18","media","reddit_video","fallback_url","preload","controls","trimmedLink","startsWith","replace","substring","thumbnail","target","href","title","rel","Comments","comment","author","moment","created_utc","fromNow","body","SubredditsLoader","Card","loadComments","dispatch","useDispatch","useState","vote","setVote","upvote","setUpvote","downvote","setDownvote","handleVote","value","loading","useSelector","state","reddit","commentsLoading","displayedComments","selectComments","map","setSearchTerm","subreddit","subreddit_name_prefixed","stickied","ups","permalink","num_comments"],"sourceRoot":""}